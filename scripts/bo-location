#!/usr/bin/env python
# -*- coding: utf8 -*-

from __future__ import print_function
import sys
import os
import zipfile
from requests import Session
import math

from optparse import OptionParser

import shapely.geometry
import shapely.wkt

import blitzortung


def get_country_data(session, country_id):
    target_file_name = country_id.upper() + '.zip'
    if not os.path.exists(target_file_name):
        print("downloading", target_file_name)
        url = 'http://download.geonames.org/export/dump/' + target_file_name
        response = session.get(url)
        with open(target_file_name, 'wb') as target_file:
            for chunk in response.iter_content(1024):
                target_file.write(chunk)
    return target_file_name


country_ids = ['CH', 'DE', 'FR', 'SE', 'ES', 'NO', 'TR', 'BA', 'PL', 'IT', 'FI', 'AT', 'GB', 'RS', 'RO', 'PT', 'HU',
               'IE', 'HR', 'GR', 'BE', 'CZ', 'NL', 'DK', 'ME', 'BY', 'BG', 'LT', 'LV', 'AL', 'SK', 'EE', 'SJ', 'MK',
               'SI', 'AD', 'LU', 'GG', 'JE', 'IM', 'LI', 'MC', 'SM', 'VA']

parser = OptionParser()

parser.add_option("--import", dest="doimport", default=False, action="store_true",
                  help="import geonames data to local database")

parser.add_option("-x", "--x-pos", dest="xpos", default=11.0,
                  help="coordinate of location", type="float")

parser.add_option("-y", "--y-pos", dest="ypos", default=48.0,
                  help="coordinate of location", type="float")

parser.add_option("-s", "--srid", dest="srid", default=blitzortung.geom.Geometry.DefaultSrid,
                  help="srid for query area and results", type="int")

(options, args) = parser.parse_args()

# open access to location database

location_db = blitzortung.db.location()

if options.doimport:
    location_db.delete_all()

    session = Session()

    for country_id in country_ids:
        archive_file_name = get_country_data(session, country_id)

        print('insert', archive_file_name)

        zip_file = zipfile.ZipFile(archive_file_name)

        with zip_file.open(country_id.upper() + '.txt') as input_file:
            for line in input_file:
                location_db.insert(line.decode('utf8'))

        location_db.commit()

else:
    # set database defaults
    location_db.set_srid(options.srid)

    # set other query parameters
    limit = blitzortung.db.query.Limit(5)
    order = blitzortung.db.query.Order('id')

    # start timer for database select
    timer = blitzortung.util.Timer()

    center = blitzortung.db.query.Center(shapely.geometry.Point(float(options.xpos), float(options.ypos)))

    # query location database
    locations = location_db.select(center)

    # take time of database select
    select_time = timer.lap()

    # display resulting locations
    for location in locations:
        print(u"%s %.1fkm %.1fÂ°" % (location['name'], location['distance'] / 1000, location['azimuth'] / math.pi * 180))

    # write out statistical information

    sys.stderr.write('-- received %d locations in %.3f seconds\n' % (len(locations), select_time))
