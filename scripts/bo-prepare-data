#!/usr/bin/env python

import glob
import itertools
import datetime

import blitzortung

ARCHIVE_DATA_PATH='/var/cache/blitzortung/raw/archive/%Y/%m/%d'

now = datetime.datetime.utcnow()

start_time = now - datetime.timedelta(hours=1)

data_path = start_time.strftime(ARCHIVE_DATA_PATH)

raw_events = []

file_index = 0
for data_file_name in glob.glob(data_path + '/*.bor'):
  data_file = blitzortung.files.Raw(data_file_name)

  time_string = start_time.strftime('%H%M')
  raw_data = data_file.get_data(time_string, time_string)

  if raw_data:
    for entry in raw_data:
      entry.index = file_index
    raw_events += raw_data
    file_index += 1

raw_events.sort()

last_event1 = None

for i in range(len(raw_events)-1):
  event1 = raw_events[i]

  if last_event1 and last_event1 == event1 and last_event1.index == event1.index:
    continue
  last_event1 = event1

  events = [event1]

  last_event2 = None

  for j in range(i, len(raw_events)):
    event2 = raw_events[j]

    # filter duplicate events
    if last_event2 and last_event2 == event2 and last_event2.index == event2.index:
      continue
    last_event2 = event2

    distance = event1.distance_to(event2)

    if distance < 1.0:
      continue

    time_difference = event1.ns_difference_to(event2)

    global_time_difference_limit = 1000000 * 3

    if time_difference > global_time_difference_limit:
      break

    time_difference_limit = distance * 3;

    if time_difference > time_difference_limit:
      continue
    
    events.append(event2)
    print i,j, event1.index, event2.index, distance, time_difference, time_difference_limit, event2
  print len(events)
